apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.19.6-alpine
          volumeMounts:
            - name: confd
              mountPath: /etc/nginx/conf.d/
          resources:
            requests:
              memory: "100Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "100m"
          ports:
          - containerPort: 80
            hostPort: 80
            protocol: TCP
          - containerPort: 443
            hostPort: 443
            protocol: TCP
      initContainers:
        - name: copyfile
          image: nginx:1.19.6-alpine
          volumeMounts:
            - name: confd
              mountPath: /confd
            - name: nginx-configmap
              mountPath: /configmap
          command: 
          - cp
          - /configmap/default.conf
          - /confd/default.conf
      volumes:
        - name: nginx-configmap
          configMap:
            name: nginx-configmap
        - name: confd
          emptyDir: {}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configmap
data:
  default.conf: |
    upstream grafana {
      server        ${PUBLIC_IP}:${GRAFANA_NODEPORT_PORT};
    }

    server {
        listen       80;
        listen  [::]:80;
        server_name  ${PUBLIC_IP};

        location / {
            proxy_pass http://grafana;
            proxy_redirect     off;
            proxy_set_header   Host \$host;
        }

        location /live {
            return 301 http://\$host?kiosk;
        }

        location ~ /sensor {
            rewrite /sensor/(.*)/(.*) http://\$host/d/lastvalue?var-uid=\$1&var-name=\$2&kiosk  break;
            rewrite /sensor/(.*) http://\$host/d/lastvalue?var-uid=\$1&kiosk  break;
        }

        location ~ /detalle {
            rewrite /detalle/(.*)/(.*) http://\$host/d/lastvalue?var-uid=\$1&var-name=\$2  break;
            rewrite /detalle/(.*) http://\$host/d/lastvalue?var-uid=\$1  break;
        }
            
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

