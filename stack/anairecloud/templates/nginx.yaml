apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.19.6-alpine
          volumeMounts:
            - name: default-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          resources:
            {{- toYaml .Values.resources.nginx | nindent 12 }}
            requests:
          ports:
          - containerPort: 80
            hostPort: 80
            protocol: TCP
      volumes:
        - name: default-conf
          configMap:
            name: default-conf
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: default-conf
data:
  default.conf: |
    upstream grafana {
      server        {{ .Values.publicIP }}:30300;
    }

    server {
        listen       80;
        listen  [::]:80;
        server_name  {{ .Values.publicIP }};

        location / {
            proxy_pass http://grafana;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            #root   /usr/share/nginx/html;
            #index  index.html index.htm;
        }

        location /live {
            return 301 http://$host?kiosk;
        }

        location ~ /sensor {
            rewrite /sensor/(.*)/(.*) http://$host/d/lastvalue?var-uid=$1&var-name=$2&kiosk  break;
            rewrite /sensor/(.*) http://$host/d/lastvalue?var-uid=$1&kiosk  break;
        }

        location ~ /detalle {
            rewrite /detalle/(.*)/(.*) http://$host/d/lastvalue?var-uid=$1&var-name=$2  break;
            rewrite /detalle/(.*) http://$host/d/lastvalue?var-uid=$1  break;

        }
        
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }